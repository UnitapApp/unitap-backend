name: Django CI

on:
  push:
    branches: ["main", "develop"]
  pull_request:
    branches: ["main", "develop"]

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      database:
        image: postgres:14.1
        env:
          POSTGRES_DB: unitap
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    strategy:
      max-parallel: 1
      matrix:
        python-version: [3.10.12]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Update pip
        run: python -m pip install --upgrade pip
      - name: Install Dependencies
        run: pip install -r requirements.txt
      - name: Run Tests
        run: python manage.py test
        env:
          FIELD_KEY: "rnPAm1QKx8hepMhqV0IKJxB9tdR_hhU4-0EVTGVXQg0="
          SECRET_KEY: "django-insecure-!=_mi0j#rhk7c9p-0wg-3me6y&fk$+fahz6fh)k1n#&@s(9vf5"
          BRIGHT_PRIVATE_KEY: "bright-private-key"
          DEBUG: False
          SENTRY_DSN: "DEBUG-DSN"
          MEMCACHEDCLOUD_SERVERS: " "
          MEMCACHEDCLOUD_USERNAME: " "
          MEMCACHEDCLOUD_PASSWORD: " "
          GITCOIN_PASSPORT_SCORER_ID: ${{ secrets.GITCOIN_PASSPORT_SCORER_ID }}
          GITCOIN_PASSPORT_API_KEY: ${{ secrets.GITCOIN_PASSPORT_API_KEY }}
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/unitap
          CONSUMER_KEY: ${{ secrets.CONSUMER_KEY }}
          CONSUMER_SECRET: ${{ secrets.CONSUMER_SECRET }}
          DEPLOYMENT_ENV: "dev"
          TELEGRAM_BOT_API_KEY: ${{ secrets.TELEGRAM_BOT_API_KEY }}
